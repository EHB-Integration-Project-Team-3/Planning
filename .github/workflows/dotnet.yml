name: Github Actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - name: add vpn connection
      shell: pwsh
      run: |
        Add-VpnConnection -Name "EHB_VPN" -ServerAddress "dtsslvpn.ehb.be" -TunnelType "SSTP" -AllUserConnection -Force
        rasdial EHB_VPN  ${{secrets.VPN}}
    - name: install posh-ssh
      shell: powershell
      run: Install-Module -Name Posh-SSH -Force
    # We kunnen direct een publish uitvoeren op de VM omdat we een action-runner van github hebben draaien op de VM, zo zijn de bestanden altijd up-to-date na elke push naar main branch  
    - name: Publish on VM
      shell: powershell
      run: |
        $secpasswd = ConvertTo-SecureString ${{ secrets.SSH_PASSWORD }} -AsPlainText -Force
        $Credentials = New-Object System.Management.Automation.PSCredential -ArgumentList ${{ secrets.SSH_USER }}, $secpasswd
        $SessionID = New-SSHSession -ComputerName ${{ secrets.SSH_CONNECTION }} -Credential $Credentials -AcceptKey:$true
        Invoke-SSHCommand -Index $SessionID.sessionid -Command "dotnet publish C:\actions-runner\_work\Planning\Planning\RabbitMQFinalProduct\rabbitmqfinalproduct.csproj -o c:\FinalProduct"
